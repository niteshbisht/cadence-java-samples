plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

apply plugin: 'java'
apply plugin: 'maven'

group = 'com.uber'
version = '0.0.1'

description = """Samples for Cadence. Based on samples for AWS SWF"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor('org.projectlombok:lombok:1.18.20')
    compile group: 'com.uber.cadence', name: 'cadence-client', version: '3.3.0'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.9'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.7.3'
}

task execute(type: JavaExec) {
    main = findProperty("mainClass") ?: ""
    classpath = sourceSets.main.runtimeClasspath
}
